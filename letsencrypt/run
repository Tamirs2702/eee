#!/bin/bash
set -eo pipefail
source /ez/util.sh

[ -n "$SSL_DOMAIN" ] || abort_service

if [ "$EUID" -eq 0 ]; then
  wait_for_service nginx || exit 0
  # Drop permissions for the rest of the script in a new shell
  exec s6-setuidgid www-data $0
fi

info letsencrypt Setting up LetsEncrypt certificate for $SSL_DOMAIN at /data/nginx-ssl

# Obatain certificate
certbot --nginx -d "$SSL_DOMAIN" --hsts --non-interactive --agree-tos \
  --http-01-port 8080 --config-dir /data/nginx-ssl/letsencrypt \
  $([ -n "$LETSENCRYPT_LOGS" ] || echo "--quiet") \
  $([ -n "$LETSENCRYPT_EMAIL" ] && echo "--email $LETSENCRYPT_EMAIL" \
                                || echo "--register-unsafely-without-email") \
  2>&1

# LetsEncrypt doesn't support tcp proxies out of the box. We need to grab the directives
# out of the HTTP server{} block and inject them into the stream{server{}} block.
ssl_directives=$(grep /data/nginx-ssl/letsencrypt /etc/nginx/nginx.conf | sed 's/#.*//' | tr '\n' ' ')
sed -i "s~# LETSENCRYPT-GOES-HERE~$ssl_directives~" /etc/nginx/nginx.conf
nginx -s reload

info letsencrypt LetsEncrypt certificate set up successfully at https://$SSL_DOMAIN/

# Try renewing every now and then
while :; do sleep 2d; certbot renew 2>&1; done
